{
  "address": "0x0f251E6deF70bA53B862afaA1338B3F098EA0855",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fundMe",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "miniUSD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x9cb7016fa617dcbf21dbab657f6c5405bcc4910f35d08555390d138266cee1f2",
  "receipt": {
    "to": null,
    "from": "0xED2ec158c54fA3aEB76492E928fa11C2c1d5818c",
    "contractAddress": "0x0f251E6deF70bA53B862afaA1338B3F098EA0855",
    "transactionIndex": 30,
    "gasUsed": "915333",
    "logsBloom": "0x
    "blockHash": "0xd1e2cd9923f94d9f8fde5ba7ec90988a27553a50155e6aadfd14fa0d3a040555",
    "transactionHash": "0x9cb7016fa617dcbf21dbab657f6c5405bcc4910f35d08555390d138266cee1f2",
    "logs": [],
    "blockNumber": 10884623,
    "cumulativeGasUsed": "7223229",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x8A753747A1Fa494EC906cE90E9f37563A8AF630e"
  ],
  "numDeployments": 1,
  "solcInputHash": "8926298d4c7ebcbdfc57bd8af1d6919e",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundMe\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"miniUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier : MIT\\n\\npragma solidity ^0.8.8;\\n\\nimport \\\"./PriceConverter.sol\\\";\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n    address public owner;\\n    address[] public funders;\\n    mapping(address => uint256) public addressToAmountFunded;\\n    uint256 public miniUSD = 50;\\n\\n    AggregatorV3Interface public priceFeed;\\n\\n    constructor(address priceFeedAddress) {\\n        owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    function fundMe() public payable {\\n        require(\\n            (msg.value.getConversionRate(priceFeed)) >= miniUSD,\\n            \\\"Not enough Amount\\\"\\n        );\\n        funders.push(msg.sender);\\n        addressToAmountFunded[msg.sender] += msg.value;\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            addressToAmountFunded[funders[funderIndex]] = 0;\\n        }\\n\\n        funders = new address[](0);\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Failed\\\");\\n    }\\n\\n    modifier onlyOwner() {\\n        require(msg.sender == owner, \\\"Failed\\\");\\n        _;\\n    }\\n}\\n\",\"keccak256\":\"0x2f3c21596a00606d4cbab188a842569a86b2aacd411e508c0d67c88312fee435\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier : MIT\\n\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getPrice(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        // AggregatorV3Interface priceFeed = AggregatorV3Interface(\\n        //       0x8A753747A1Fa494EC906cE90E9f37563A8AF630e\\n        //  );\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\n        return uint256(price * 1e10);\\n    }\\n\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUSD = (ethPrice * ethAmount) / 1e18;\\n        return ethAmountInUSD;\\n    }\\n}\\n\",\"keccak256\":\"0xa05ab2acc058f2b1299d3a9311fd752477cedc3435059ce70d5b25923b1160a4\"}},\"version\":1}",
  "bytecode": "0x6080604052603260035534801561001557600080fd5b50604051610fbb380380610fbb83398181016040528101906100379190610121565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061014e565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100ee826100c3565b9050919050565b6100fe816100e3565b811461010957600080fd5b50565b60008151905061011b816100f5565b92915050565b600060208284031215610137576101366100be565b5b60006101458482850161010c565b91505092915050565b610e5e8061015d6000396000f3fe6080604052600436106100705760003560e01c8063741bef1a1161004e578063741bef1a146100f45780638da5cb5b1461011f578063b6a324e01461014a578063dc0d3dff1461015457610070565b80633ccfd60b146100755780633e47d6f31461008c57806373cef391146100c9575b600080fd5b34801561008157600080fd5b5061008a610191565b005b34801561009857600080fd5b506100b360048036038101906100ae9190610796565b6103d5565b6040516100c091906107dc565b60405180910390f35b3480156100d557600080fd5b506100de6103ed565b6040516100eb91906107dc565b60405180910390f35b34801561010057600080fd5b506101096103f3565b6040516101169190610856565b60405180910390f35b34801561012b57600080fd5b50610134610419565b6040516101419190610880565b60405180910390f35b61015261043d565b005b34801561016057600080fd5b5061017b600480360381019061017691906108c7565b610571565b6040516101889190610880565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461021f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021690610951565b60405180910390fd5b60005b6001805490508110156102c5576000600260006001848154811061024957610248610971565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080806102bd906109cf565b915050610222565b50600067ffffffffffffffff8111156102e1576102e0610a18565b5b60405190808252806020026020018201604052801561030f5781602001602082028036833780820191505090505b506001908051906020019061032592919061068c565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161034c90610a78565b60006040518083038185875af1925050503d8060008114610389576040519150601f19603f3d011682016040523d82523d6000602084013e61038e565b606091505b50509050806103d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c990610951565b60405180910390fd5b50565b60026020528060005260406000206000915090505481565b60035481565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600354610475600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105b090919063ffffffff16565b10156104b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ad90610ad9565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105689190610af9565b92505081905550565b6001818154811061058157600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105bc836105ec565b90506000670de0b6b3a764000085836105d59190610b4f565b6105df9190610bd8565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561063557600080fd5b505afa158015610649573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066d9190610c96565b5050509150506402540be400816106849190610d11565b915050919050565b828054828255906000526020600020908101928215610705579160200282015b828111156107045782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106ac565b5b5090506107129190610716565b5090565b5b8082111561072f576000816000905550600101610717565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061076382610738565b9050919050565b61077381610758565b811461077e57600080fd5b50565b6000813590506107908161076a565b92915050565b6000602082840312156107ac576107ab610733565b5b60006107ba84828501610781565b91505092915050565b6000819050919050565b6107d6816107c3565b82525050565b60006020820190506107f160008301846107cd565b92915050565b6000819050919050565b600061081c61081761081284610738565b6107f7565b610738565b9050919050565b600061082e82610801565b9050919050565b600061084082610823565b9050919050565b61085081610835565b82525050565b600060208201905061086b6000830184610847565b92915050565b61087a81610758565b82525050565b60006020820190506108956000830184610871565b92915050565b6108a4816107c3565b81146108af57600080fd5b50565b6000813590506108c18161089b565b92915050565b6000602082840312156108dd576108dc610733565b5b60006108eb848285016108b2565b91505092915050565b600082825260208201905092915050565b7f4661696c65640000000000000000000000000000000000000000000000000000600082015250565b600061093b6006836108f4565b915061094682610905565b602082019050919050565b6000602082019050818103600083015261096a8161092e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109da826107c3565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a0d57610a0c6109a0565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a62600083610a47565b9150610a6d82610a52565b600082019050919050565b6000610a8382610a55565b9150819050919050565b7f4e6f7420656e6f75676820416d6f756e74000000000000000000000000000000600082015250565b6000610ac36011836108f4565b9150610ace82610a8d565b602082019050919050565b60006020820190508181036000830152610af281610ab6565b9050919050565b6000610b04826107c3565b9150610b0f836107c3565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610b4457610b436109a0565b5b828201905092915050565b6000610b5a826107c3565b9150610b65836107c3565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b9e57610b9d6109a0565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610be3826107c3565b9150610bee836107c3565b925082610bfe57610bfd610ba9565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c2881610c09565b8114610c3357600080fd5b50565b600081519050610c4581610c1f565b92915050565b6000819050919050565b610c5e81610c4b565b8114610c6957600080fd5b50565b600081519050610c7b81610c55565b92915050565b600081519050610c908161089b565b92915050565b600080600080600060a08688031215610cb257610cb1610733565b5b6000610cc088828901610c36565b9550506020610cd188828901610c6c565b9450506040610ce288828901610c81565b9350506060610cf388828901610c81565b9250506080610d0488828901610c36565b9150509295509295909350565b6000610d1c82610c4b565b9150610d2783610c4b565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d6657610d656109a0565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610da357610da26109a0565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610de057610ddf6109a0565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610e1d57610e1c6109a0565b5b82820290509291505056fea2646970667358221220dfb3e76f4cc4b771b4fc28991a7b95407ae72929c21ea5edcdca57acf0cead2364736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106100705760003560e01c8063741bef1a1161004e578063741bef1a146100f45780638da5cb5b1461011f578063b6a324e01461014a578063dc0d3dff1461015457610070565b80633ccfd60b146100755780633e47d6f31461008c57806373cef391146100c9575b600080fd5b34801561008157600080fd5b5061008a610191565b005b34801561009857600080fd5b506100b360048036038101906100ae9190610796565b6103d5565b6040516100c091906107dc565b60405180910390f35b3480156100d557600080fd5b506100de6103ed565b6040516100eb91906107dc565b60405180910390f35b34801561010057600080fd5b506101096103f3565b6040516101169190610856565b60405180910390f35b34801561012b57600080fd5b50610134610419565b6040516101419190610880565b60405180910390f35b61015261043d565b005b34801561016057600080fd5b5061017b600480360381019061017691906108c7565b610571565b6040516101889190610880565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461021f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021690610951565b60405180910390fd5b60005b6001805490508110156102c5576000600260006001848154811061024957610248610971565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080806102bd906109cf565b915050610222565b50600067ffffffffffffffff8111156102e1576102e0610a18565b5b60405190808252806020026020018201604052801561030f5781602001602082028036833780820191505090505b506001908051906020019061032592919061068c565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161034c90610a78565b60006040518083038185875af1925050503d8060008114610389576040519150601f19603f3d011682016040523d82523d6000602084013e61038e565b606091505b50509050806103d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c990610951565b60405180910390fd5b50565b60026020528060005260406000206000915090505481565b60035481565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600354610475600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105b090919063ffffffff16565b10156104b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ad90610ad9565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105689190610af9565b92505081905550565b6001818154811061058157600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105bc836105ec565b90506000670de0b6b3a764000085836105d59190610b4f565b6105df9190610bd8565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561063557600080fd5b505afa158015610649573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066d9190610c96565b5050509150506402540be400816106849190610d11565b915050919050565b828054828255906000526020600020908101928215610705579160200282015b828111156107045782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106ac565b5b5090506107129190610716565b5090565b5b8082111561072f576000816000905550600101610717565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061076382610738565b9050919050565b61077381610758565b811461077e57600080fd5b50565b6000813590506107908161076a565b92915050565b6000602082840312156107ac576107ab610733565b5b60006107ba84828501610781565b91505092915050565b6000819050919050565b6107d6816107c3565b82525050565b60006020820190506107f160008301846107cd565b92915050565b6000819050919050565b600061081c61081761081284610738565b6107f7565b610738565b9050919050565b600061082e82610801565b9050919050565b600061084082610823565b9050919050565b61085081610835565b82525050565b600060208201905061086b6000830184610847565b92915050565b61087a81610758565b82525050565b60006020820190506108956000830184610871565b92915050565b6108a4816107c3565b81146108af57600080fd5b50565b6000813590506108c18161089b565b92915050565b6000602082840312156108dd576108dc610733565b5b60006108eb848285016108b2565b91505092915050565b600082825260208201905092915050565b7f4661696c65640000000000000000000000000000000000000000000000000000600082015250565b600061093b6006836108f4565b915061094682610905565b602082019050919050565b6000602082019050818103600083015261096a8161092e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109da826107c3565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a0d57610a0c6109a0565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a62600083610a47565b9150610a6d82610a52565b600082019050919050565b6000610a8382610a55565b9150819050919050565b7f4e6f7420656e6f75676820416d6f756e74000000000000000000000000000000600082015250565b6000610ac36011836108f4565b9150610ace82610a8d565b602082019050919050565b60006020820190508181036000830152610af281610ab6565b9050919050565b6000610b04826107c3565b9150610b0f836107c3565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610b4457610b436109a0565b5b828201905092915050565b6000610b5a826107c3565b9150610b65836107c3565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b9e57610b9d6109a0565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610be3826107c3565b9150610bee836107c3565b925082610bfe57610bfd610ba9565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c2881610c09565b8114610c3357600080fd5b50565b600081519050610c4581610c1f565b92915050565b6000819050919050565b610c5e81610c4b565b8114610c6957600080fd5b50565b600081519050610c7b81610c55565b92915050565b600081519050610c908161089b565b92915050565b600080600080600060a08688031215610cb257610cb1610733565b5b6000610cc088828901610c36565b9550506020610cd188828901610c6c565b9450506040610ce288828901610c81565b9350506060610cf388828901610c81565b9250506080610d0488828901610c36565b9150509295509295909350565b6000610d1c82610c4b565b9150610d2783610c4b565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d6657610d656109a0565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610da357610da26109a0565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610de057610ddf6109a0565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610e1d57610e1c6109a0565b5b82820290509291505056fea2646970667358221220dfb3e76f4cc4b771b4fc28991a7b95407ae72929c21ea5edcdca57acf0cead2364736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 53,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 56,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 60,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 63,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "miniUSD",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 66,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "4",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}